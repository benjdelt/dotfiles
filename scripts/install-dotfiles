#!/usr/bin/env bash

readonly BACKUP_DIR=$HOME/dotfiles/backup/dotfiles/
readonly IGNORE=(.git .gitignore .swp$)
readonly BASE_DIR=$(dirname "$0")/..

cd "$(pwd)/$BASE_DIR" || exit 1

source ./scripts/colors

# Check if a fil is in the IGNORE list
in_ignore () {
    for i in "${IGNORE[@]}"; do
	if [[ "$1" =~ $i ]]; then
            return 0
	fi
    done
    return 1
}

# Remove existing directory to make way for the link
remove_existing_dir () {
    local basename
    basename=$(basename "$1")
    local target_dir=$HOME/$basename
    if [[ -d $1 && -d $target_dir ]]; then
	echo "target $target_dir"
	rm -rf "$target_dir"
    fi
}
        
echo -e "${BLUE}Backing up and creating links to dotfiles...${RESET_FORMAT}"

# Create the backup directory if it doesn't exist
mkdir -pv "$BACKUP_DIR"

# Backup dotfiles in the HOME directory and link dotfiles into it
for f in ./dotfiles/.[^.]*; do
    basename=$(basename "$f")
    # Check if the file is in the IGNORE list
    in_ignore "$(basename "$f")"
    if [[ "$?" -ne 0 ]]; then
	# Backup file
	if [[ -f "$HOME/$basename" ]]; then
            rsync -rv --no-links "$HOME/$basename" "$BACKUP_DIR"
	fi
	remove_existing_dir "$f"
	# Link to dotfile
	ln -svf "$(pwd)/dotfiles/$basename" "$HOME"
    fi
done

if [[ "$?" == 0 ]]; then
    echo -e "${GREEN}Dotfiles installation complete ${RESET_FORMAT}"
fi

